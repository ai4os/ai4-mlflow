services:
  proxy:
    image: nginx:latest
    volumes:
      - ./proxy:/etc/nginx/templates:ro
    networks:
      - backend
    env_file: .env
    environment:
      - BACKEND_PORT=5000
    ports:
      - 81:80
      - 443:443
    depends_on:
      - backend

  backend:
    restart: always
    build: ./backend
    depends_on:
      - database
    networks:
      - backend
    volumes:
      - ${PWD}/backend/srv:/srv
      - user-data:/var/data/user-data
      - app-data:/var/data/app-data
    env_file: .env
    environment:
      - MLFLOW_AUTH_CONFIG_PATH=/srv/auth_config.ini

  database:
    image: postgres:latest
    restart: always
    user: postgres
    volumes:
      - app-data:/var/lib/postgresql/data
    env_file: .env
    environment:
      - POSTGRES_DB=${DATABASE_NAME:?DATABASE_NAME is not set}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:?DATABASE_PASSWORD is not set}
    networks:
      - backend
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  backup_db:
    build:
      context: ./backend
    image: postgres:latest
    volumes:
      - db_backups:/backups
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:?DATABASE_PASSWORD is not set}
    #entrypoint: ["docker-entrypoint.sh"]
    command:
    - "tail"
    - "-f"
    - "/dev/null"

networks:
  backend:

volumes:
  user-data:
  app-data:
  db_backups:
